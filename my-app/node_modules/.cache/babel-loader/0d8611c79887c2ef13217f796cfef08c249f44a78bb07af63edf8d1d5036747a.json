{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\OneDrive\\\\Documents\\\\GitHub\\\\Team-13\\\\my-app\\\\src\\\\pages\\\\SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const searchSongs = async () => {\n    const response = await axios.get(`http://localhost:8000/search?query=${query}`);\n    setTracks(response.data.tracks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-800 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search songs...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"p-2 rounded text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchSongs,\n        className: \"bg-blue-500 p-2 ml-2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: track.album.images[0].url,\n            alt: track.name,\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [track.name, \" - \", track.artists[0].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ZL9tAV8ruI1/Hexwb6DvtkcQNeo=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Search","_s","query","setQuery","tracks","setTracks","searchSongs","response","get","data","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","src","album","images","url","alt","name","width","artists","id","_c","$RefreshReg$"],"sources":["C:/Users/bryce/OneDrive/Documents/GitHub/Team-13/my-app/src/pages/SearchPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Search() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  const searchSongs = async () => {\r\n    const response = await axios.get(`http://localhost:8000/search?query=${query}`);\r\n    setTracks(response.data.tracks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n    <div className=\"p-6 bg-gray-800 text-white\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search songs...\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        className=\"p-2 rounded text-black\"\r\n      />\r\n      <button onClick={searchSongs} className=\"bg-blue-500 p-2 ml-2\">Search</button>\r\n\r\n      <div>\r\n        {tracks.map((track: any) => (\r\n          <div key={track.id} className=\"p-4 border-b\">\r\n            <img src={track.album.images[0].url} alt={track.name} width=\"50\" />\r\n            <p>{track.name} - {track.artists[0].name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsCN,KAAK,EAAE,CAAC;IAC/EG,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACL,MAAM,CAAC;EACjC,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eACjCZ,OAAA;MAAKW,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCZ,OAAA;QACEa,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEZ,KAAM;QACba,QAAQ,EAAGC,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CJ,SAAS,EAAC;MAAwB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFtB,OAAA;QAAQuB,OAAO,EAAEhB,WAAY;QAACI,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE9EtB,OAAA;QAAAY,QAAA,EACGP,MAAM,CAACmB,GAAG,CAAEC,KAAU,iBACrBzB,OAAA;UAAoBW,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC1CZ,OAAA;YAAK0B,GAAG,EAAED,KAAK,CAACE,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;YAACC,GAAG,EAAEL,KAAK,CAACM,IAAK;YAACC,KAAK,EAAC;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnEtB,OAAA;YAAAY,QAAA,GAAIa,KAAK,CAACM,IAAI,EAAC,KAAG,EAACN,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFrCG,KAAK,CAACS,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACpB,EAAA,CAhCuBD,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}