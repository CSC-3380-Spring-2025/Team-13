{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\OneDrive\\\\Documents\\\\GitHub\\\\Team-13\\\\my-app\\\\src\\\\components\\\\SongPlayer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  trackUri,\n  trackImage,\n  trackName,\n  trackArtist\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [deviceId, setDeviceId] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const loadSpotifySDK = () => {\n      if (window.Spotify) return;\n      const script = document.createElement(\"script\");\n      script.src = \"https://sdk.scdn.co/spotify-player.js\";\n      script.async = true;\n      script.onload = () => {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n          const token = \"BQAVukd_vAV5OJSf6hdNgSY9PAIOFXAFuz51lro04ZivPTDmzYc9wWTJ-R281WKK9uSHOJwbP8aYUK4WWQZHyV2BbC3gLoxVPZrsDQ9XPhHZ5-BomiKaq8okjtSVrqERGSdEcuoVBqI\"; // Replace with your actual token\n\n          const playerInstance = new window.Spotify.Player({\n            name: \"Resonance Player\",\n            getOAuthToken: cb => cb(token),\n            volume: 0.5\n          });\n\n          // ‚úÖ Explicitly define type for `device_id`\n          playerInstance.addListener(\"ready\", ({\n            device_id\n          }) => {\n            console.log(\"Spotify Player Ready - Device ID:\", device_id);\n            setDeviceId(device_id);\n          });\n          playerInstance.addListener(\"player_state_changed\", state => {\n            if (!state) return;\n            setIsPlaying(!state.paused);\n          });\n          playerInstance.connect();\n          setPlayer(playerInstance);\n        };\n      };\n      document.body.appendChild(script);\n    };\n    loadSpotifySDK();\n  }, []);\n  useEffect(() => {\n    if (trackUri && player && deviceId) {\n      playTrack(trackUri);\n    }\n  }, [trackUri, player, deviceId]);\n  const playTrack = async uri => {\n    if (!deviceId) {\n      console.error(\"No active Spotify device found!\");\n      return;\n    }\n    const token = \"BQAVukd_vAV5OJSf6hdNgSY9PAIOFXAFuz51lro04ZivPTDmzYc9wWTJ-R281WKK9uSHOJwbP8aYUK4WWQZHyV2BbC3gLoxVPZrsDQ9XPhHZ5-BomiKaq8okjtSVrqERGSdEcuoVBqI\"; // Replace with your real Spotify access token\n\n    await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        uris: [uri]\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB5 Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), trackUri ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [trackImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: trackImage,\n        alt: trackName || \"Track Cover\",\n        className: \"track-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: trackArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isPlaying ? \"Playing üé∂\" : \"Paused ‚è∏\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No song selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"boDjHhQm4jCWoY45Wb/Mie5JKAQ=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Player","trackUri","trackImage","trackName","trackArtist","_s","player","setPlayer","deviceId","setDeviceId","isPlaying","setIsPlaying","loadSpotifySDK","window","Spotify","script","document","createElement","src","async","onload","onSpotifyWebPlaybackSDKReady","token","playerInstance","name","getOAuthToken","cb","volume","addListener","device_id","console","log","state","paused","connect","body","appendChild","playTrack","uri","error","fetch","method","headers","JSON","stringify","uris","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","_c","$RefreshReg$"],"sources":["C:/Users/bryce/OneDrive/Documents/GitHub/Team-13/my-app/src/components/SongPlayer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    onSpotifyWebPlaybackSDKReady: () => void;\r\n    Spotify: any;\r\n  }\r\n}\r\n\r\ninterface PlayerProps {\r\n  trackUri: string | null;\r\n  trackImage: string | null;\r\n  trackName: string | null;\r\n  trackArtist: string | null;\r\n}\r\n\r\nexport default function Player({ trackUri, trackImage, trackName, trackArtist }: PlayerProps) {\r\n  const [player, setPlayer] = useState<any>(null);\r\n  const [deviceId, setDeviceId] = useState<string | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadSpotifySDK = () => {\r\n      if (window.Spotify) return;\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n      script.async = true;\r\n      script.onload = () => {\r\n        window.onSpotifyWebPlaybackSDKReady = () => {\r\n          const token = \"BQAVukd_vAV5OJSf6hdNgSY9PAIOFXAFuz51lro04ZivPTDmzYc9wWTJ-R281WKK9uSHOJwbP8aYUK4WWQZHyV2BbC3gLoxVPZrsDQ9XPhHZ5-BomiKaq8okjtSVrqERGSdEcuoVBqI\"; // Replace with your actual token\r\n\r\n          const playerInstance = new window.Spotify.Player({\r\n            name: \"Resonance Player\",\r\n            getOAuthToken: (cb: (arg0: string) => any) => cb(token),\r\n            volume: 0.5,\r\n          });\r\n\r\n          // ‚úÖ Explicitly define type for `device_id`\r\n          playerInstance.addListener(\"ready\", ({ device_id }: { device_id: string }) => {\r\n            console.log(\"Spotify Player Ready - Device ID:\", device_id);\r\n            setDeviceId(device_id);\r\n          });\r\n\r\n          playerInstance.addListener(\"player_state_changed\", (state: any) => {\r\n            if (!state) return;\r\n            setIsPlaying(!state.paused);\r\n          });\r\n\r\n          playerInstance.connect();\r\n          setPlayer(playerInstance);\r\n        };\r\n      };\r\n\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    loadSpotifySDK();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (trackUri && player && deviceId) {\r\n      playTrack(trackUri);\r\n    }\r\n  }, [trackUri, player, deviceId]);\r\n\r\n  const playTrack = async (uri: string) => {\r\n    if (!deviceId) {\r\n      console.error(\"No active Spotify device found!\");\r\n      return;\r\n    }\r\n\r\n    const token = \"BQAVukd_vAV5OJSf6hdNgSY9PAIOFXAFuz51lro04ZivPTDmzYc9wWTJ-R281WKK9uSHOJwbP8aYUK4WWQZHyV2BbC3gLoxVPZrsDQ9XPhHZ5-BomiKaq8okjtSVrqERGSdEcuoVBqI\"; // Replace with your real Spotify access token\r\n\r\n    await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ uris: [uri] }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <h2>üéµ Now Playing</h2>\r\n      {trackUri ? (\r\n        <div className=\"track-info\">\r\n          {trackImage && <img src={trackImage} alt={trackName || \"Track Cover\"} className=\"track-image\" />}\r\n          <h3>{trackName}</h3>\r\n          <p>{trackArtist}</p>\r\n          <p>{isPlaying ? \"Playing üé∂\" : \"Paused ‚è∏\"}</p>\r\n        </div>\r\n      ) : (\r\n        <p>No song selected</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB5C,eAAe,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,SAAS;EAAEC;AAAyB,CAAC,EAAE;EAAAC,EAAA;EAC5F,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAM,IAAI,CAAC;EAC/C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAIC,MAAM,CAACC,OAAO,EAAE;MAEpB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,uCAAuC;MACpDH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,MAAM,GAAG,MAAM;QACpBP,MAAM,CAACQ,4BAA4B,GAAG,MAAM;UAC1C,MAAMC,KAAK,GAAG,6IAA6I,CAAC,CAAC;;UAE7J,MAAMC,cAAc,GAAG,IAAIV,MAAM,CAACC,OAAO,CAACd,MAAM,CAAC;YAC/CwB,IAAI,EAAE,kBAAkB;YACxBC,aAAa,EAAGC,EAAyB,IAAKA,EAAE,CAACJ,KAAK,CAAC;YACvDK,MAAM,EAAE;UACV,CAAC,CAAC;;UAEF;UACAJ,cAAc,CAACK,WAAW,CAAC,OAAO,EAAE,CAAC;YAAEC;UAAiC,CAAC,KAAK;YAC5EC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,SAAS,CAAC;YAC3DpB,WAAW,CAACoB,SAAS,CAAC;UACxB,CAAC,CAAC;UAEFN,cAAc,CAACK,WAAW,CAAC,sBAAsB,EAAGI,KAAU,IAAK;YACjE,IAAI,CAACA,KAAK,EAAE;YACZrB,YAAY,CAAC,CAACqB,KAAK,CAACC,MAAM,CAAC;UAC7B,CAAC,CAAC;UAEFV,cAAc,CAACW,OAAO,CAAC,CAAC;UACxB3B,SAAS,CAACgB,cAAc,CAAC;QAC3B,CAAC;MACH,CAAC;MAEDP,QAAQ,CAACmB,IAAI,CAACC,WAAW,CAACrB,MAAM,CAAC;IACnC,CAAC;IAEDH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,IAAIK,MAAM,IAAIE,QAAQ,EAAE;MAClC6B,SAAS,CAACpC,QAAQ,CAAC;IACrB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEK,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEhC,MAAM6B,SAAS,GAAG,MAAOC,GAAW,IAAK;IACvC,IAAI,CAAC9B,QAAQ,EAAE;MACbsB,OAAO,CAACS,KAAK,CAAC,iCAAiC,CAAC;MAChD;IACF;IAEA,MAAMjB,KAAK,GAAG,6IAA6I,CAAC,CAAC;;IAE7J,MAAMkB,KAAK,CAAC,uDAAuDhC,QAAQ,EAAE,EAAE;MAC7EiC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUpB,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB,CAAC;MACDa,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAE,CAACP,GAAG;MAAE,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvC,OAAA;IAAK+C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BhD,OAAA;MAAAgD,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBlD,QAAQ,gBACPF,OAAA;MAAK+C,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxB7C,UAAU,iBAAIH,OAAA;QAAKmB,GAAG,EAAEhB,UAAW;QAACkD,GAAG,EAAEjD,SAAS,IAAI,aAAc;QAAC2C,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChGpD,OAAA;QAAAgD,QAAA,EAAK5C;MAAS;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBpD,OAAA;QAAAgD,QAAA,EAAI3C;MAAW;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBpD,OAAA;QAAAgD,QAAA,EAAIrC,SAAS,GAAG,YAAY,GAAG;MAAU;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENpD,OAAA;MAAAgD,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9C,EAAA,CAnFuBL,MAAM;AAAAqD,EAAA,GAANrD,MAAM;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}