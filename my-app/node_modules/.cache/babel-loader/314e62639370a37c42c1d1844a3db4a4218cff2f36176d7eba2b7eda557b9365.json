{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\OneDrive\\\\Documents\\\\GitHub\\\\Team-13\\\\my-app\\\\src\\\\pages\\\\Feed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const defaultPosts = [{\n      id: 1,\n      username: 'username1',\n      concert: 'Grand National Tour',\n      songClip: 'Not Like Us',\n      extraContent: \"Best Night Out!\",\n      liked: false\n    }, {\n      id: 2,\n      username: 'username2',\n      concert: 'Drake World Tour',\n      songClip: 'Take Care',\n      extraContent: \"The GOAT!\",\n      liked: false\n    }];\n    const storedPosts = JSON.parse(sessionStorage.getItem('posts') || '[]');\n    if (storedPosts.length > 0) {\n      setPosts(storedPosts);\n    } else {\n      setPosts(defaultPosts);\n      sessionStorage.setItem('posts', JSON.stringify(defaultPosts));\n    }\n  }, []);\n  const toggleLike = id => {\n    const updatedPosts = posts.map(post => post.id === id ? {\n      ...post,\n      liked: !post.liked\n    } : post);\n    setPosts(updatedPosts);\n    sessionStorage.setItem('posts', JSON.stringify(updatedPosts));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-post-button\",\n      onClick: () => navigate('/create'),\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"@\", post.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Concert Attended: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.concert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Favorite Song Performed: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.songClip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), post.extraContent && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", post.extraContent, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `like-button ${post.liked ? 'liked' : ''}`,\n          onClick: () => toggleLike(post.id),\n          children: post.liked ? 'Liked' : 'Like'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"qQ3YxOpq8nIvxfa6GYj5Pc4Bf3I=\", false, function () {\n  return [useNavigate];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Feed","_s","navigate","posts","setPosts","defaultPosts","id","username","concert","songClip","extraContent","liked","storedPosts","JSON","parse","sessionStorage","getItem","length","setItem","stringify","toggleLike","updatedPosts","map","post","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bryce/OneDrive/Documents/GitHub/Team-13/my-app/src/pages/Feed.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Feed.css';\r\n\r\ninterface Post {\r\n  id: number;\r\n  username: string;\r\n  concert: string;\r\n  songClip: string;\r\n  extraContent?: string;\r\n  liked: boolean;\r\n}\r\n\r\nconst Feed: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n\r\n  useEffect(() => {\r\n    const defaultPosts: Post[] = [\r\n      {\r\n        id: 1,\r\n        username: 'username1',\r\n        concert: 'Grand National Tour',\r\n        songClip: 'Not Like Us',\r\n        extraContent: \"Best Night Out!\",\r\n        liked: false,\r\n      },\r\n      {\r\n        id: 2,\r\n        username: 'username2',\r\n        concert: 'Drake World Tour',\r\n        songClip: 'Take Care',\r\n        extraContent: \"The GOAT!\",\r\n        liked: false,\r\n      },\r\n    ];\r\n\r\n    const storedPosts = JSON.parse(sessionStorage.getItem('posts') || '[]');\r\n\r\n    if (storedPosts.length > 0) {\r\n      setPosts(storedPosts);\r\n    } else {\r\n      setPosts(defaultPosts);\r\n      sessionStorage.setItem('posts', JSON.stringify(defaultPosts));\r\n    }\r\n  }, []);\r\n\r\n  const toggleLike = (id: number) => {\r\n    const updatedPosts = posts.map((post) =>\r\n      post.id === id ? { ...post, liked: !post.liked } : post\r\n    );\r\n    setPosts(updatedPosts);\r\n    sessionStorage.setItem('posts', JSON.stringify(updatedPosts));\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <button className=\"create-post-button\" onClick={() => navigate('/create')}>\r\n        <h4>Create New Post</h4>\r\n      </button>\r\n\r\n      {posts.map((post) => (\r\n        <div key={post.id} className=\"post-card\">\r\n          <h3>@{post.username}</h3>\r\n          <p>Concert Attended: <strong>{post.concert}</strong></p>\r\n          <p>Favorite Song Performed: <strong>{post.songClip}</strong></p>\r\n          {post.extraContent && <p>\"{post.extraContent}\"</p>}\r\n          <div className=\"post-actions\">\r\n            <button\r\n              className={`like-button ${post.liked ? 'liked' : ''}`}\r\n              onClick={() => toggleLike(post.id)}\r\n            >\r\n              {post.liked ? 'Liked' : 'Like'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}