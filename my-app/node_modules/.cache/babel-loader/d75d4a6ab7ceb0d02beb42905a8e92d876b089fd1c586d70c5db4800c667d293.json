{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\OneDrive\\\\Documents\\\\GitHub\\\\Team-13\\\\my-app\\\\src\\\\pages\\\\SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport '../styles/SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage({\n  setSelectedTrack\n}) {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const searchSongs = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      var _response$data$tracks;\n      const options = {\n        method: 'GET',\n        url: 'https://shazam.p.rapidapi.com/search',\n        params: {\n          term: query,\n          locale: 'en-US',\n          offset: '0',\n          limit: '10'\n        },\n        headers: {\n          'X-RapidAPI-Key': '5d02bc9b68mshc13e9eece7b221cp1c028cjsn5067019bd382',\n          'X-RapidAPI-Host': 'shazam.p.rapidapi.com'\n        }\n      };\n      const response = await axios.request(options);\n      const tracksData = ((_response$data$tracks = response.data.tracks) === null || _response$data$tracks === void 0 ? void 0 : _response$data$tracks.hits.map(hit => hit.track)) || [];\n      setTracks(tracksData);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your favorite songs here\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"search-box2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchSongs,\n        className: \"search-button\",\n        children: loading ? 'Searching' : 'Search'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tracks.map(track => {\n          var _track$images;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-card\",\n            onClick: () => setSelectedTrack(track),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_track$images = track.images) === null || _track$images === void 0 ? void 0 : _track$images.coverart,\n              alt: track.title,\n              width: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [track.title, \" - \", track.subtitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, track.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"GpeLYLEvepimyv2ta/G39FXQjBg=\");\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","SearchPage","setSelectedTrack","_s","query","setQuery","tracks","setTracks","loading","setLoading","searchSongs","_response$data$tracks","options","method","url","params","term","locale","offset","limit","headers","response","request","tracksData","data","hits","map","hit","track","error","console","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_track$images","style","cursor","src","images","coverart","alt","title","width","subtitle","key","_c","$RefreshReg$"],"sources":["C:/Users/bryce/OneDrive/Documents/GitHub/Team-13/my-app/src/pages/SearchPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport '../styles/SearchPage.css';\r\n\r\ninterface SearchProps {\r\n  setSelectedTrack: (track: any) => void;\r\n}\r\n\r\nexport default function SearchPage({ setSelectedTrack }: SearchProps) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [tracks, setTracks] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const searchSongs = async () => {\r\n    if (!query) return;\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const options = {\r\n        method: 'GET',\r\n        url: 'https://shazam.p.rapidapi.com/search',\r\n        params: { term: query, locale: 'en-US', offset: '0', limit: '10' },\r\n        headers: {\r\n          'X-RapidAPI-Key': '5d02bc9b68mshc13e9eece7b221cp1c028cjsn5067019bd382',\r\n          'X-RapidAPI-Host': 'shazam.p.rapidapi.com',\r\n        },\r\n      };\r\n\r\n      const response = await axios.request(options);\r\n      const tracksData = response.data.tracks?.hits.map((hit: any) => hit.track) || [];\r\n      setTracks(tracksData);\r\n    } catch (error) {\r\n      console.error('Error fetching songs:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <div className=\"search-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your favorite songs here\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          className=\"search-box2\"\r\n        />\r\n        <button onClick={searchSongs} className=\"search-button\">\r\n          {loading ? 'Searching' : 'Search'}\r\n        </button>\r\n\r\n        <div>\r\n          {tracks.map((track: any) => (\r\n            <div\r\n              key={track.key}\r\n              className=\"song-card\"\r\n              onClick={() => setSelectedTrack(track)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img src={track.images?.coverart} alt={track.title} width=\"50\" />\r\n              <p>{track.title} - {track.subtitle}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}