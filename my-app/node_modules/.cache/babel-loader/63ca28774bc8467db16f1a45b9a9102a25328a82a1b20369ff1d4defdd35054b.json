{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\OneDrive\\\\Documents\\\\GitHub\\\\Team-13\\\\my-app\\\\src\\\\pages\\\\SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport '../styles/SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst searchTracks = [{\n  id: \"song1\",\n  name: \"Nokia\",\n  artists: [{\n    name: \"Drake\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.redd.it/rget84v49jie1.jpeg\"\n    }]\n  }\n}, {\n  id: \"song2\",\n  name: \"Stargazing\",\n  artists: [{\n    name: \"Travis Scott\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.scdn.co/image/ab67616d0000b273072e9faef2ef7b6db63834a3\"\n    }]\n  }\n}, {\n  id: \"song3\",\n  name: \"Street Sweeper\",\n  artists: [{\n    name: \"Gunna (Ft. Future)\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.scdn.co/image/ab67616d0000b273e60ecd82c26836900c35714a\"\n    }]\n  }\n}, {\n  id: \"song4\",\n  name: \"Never Gonna Give You Up\",\n  artists: [{\n    name: \"Rick Astley\"\n  }],\n  album: {\n    images: [{\n      url: \"https://makerworld.bblmw.com/makerworld/model/US2ab61bb7d3000c/design/2024-01-30_029b2304056c.png?x-oss-process=image/resize,w_1000/format,webp\"\n    }]\n  }\n}, {\n  id: \"song5\",\n  name: \"Not Like Us\",\n  artists: [{\n    name: \"Kendrick Lamar\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.scdn.co/image/ab67616d0000b2731ea0c62b2339cbf493a999ad\"\n    }]\n  }\n}, {\n  id: \"song6\",\n  name: \"Out Of Time\",\n  artists: [{\n    name: \"The Weeknd\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.scdn.co/image/ab67616d0000b2734ab2520c2c77a1d66b9ee21d\"\n    }]\n  }\n}, {\n  id: \"song7\",\n  name: \"Psycho CEO\",\n  artists: [{\n    name: \"Yeat\"\n  }],\n  album: {\n    images: [{\n      url: \"https://upload.wikimedia.org/wikipedia/en/9/97/Yeat_-_2093.png\"\n    }]\n  }\n}, {\n  id: \"song8\",\n  name: \"500lbs\",\n  artists: [{\n    name: \"Lil Tecca\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i.scdn.co/image/ab67616d0000b273c4e6adea69105e6b6e214b96\"\n    }]\n  }\n}, {\n  id: \"song9\",\n  name: \"EVIL J0RDAN\",\n  artists: [{\n    name: \"Playboi Carti\"\n  }],\n  album: {\n    images: [{\n      url: \"https://images.genius.com/d189226c778fabd425194010d8574361.1000x1000x1.png\"\n    }]\n  }\n}, {\n  id: \"song10\",\n  name: \"Can't Leave Without It\",\n  artists: [{\n    name: \"21 Savage\"\n  }],\n  album: {\n    images: [{\n      url: \"https://i1.sndcdn.com/artworks-3BcPD7boRmWW-0-t500x500.jpg\"\n    }]\n  }\n}];\nconst YOUTUBE_API_KEY = \"AIzaSyAO5UY1Iz3Se1c83YFQZ9u4Plot8Yuur8c\";\nexport default function SearchPage() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [tracks, setTracks] = useState(searchTracks);\n  const navigate = useNavigate();\n  const searchSongs = async () => {\n    if (!query.trim()) return;\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          part: 'snippet',\n          maxResults: 50,\n          q: query,\n          key: YOUTUBE_API_KEY,\n          type: 'video'\n        }\n      });\n      const youtubeTracks = response.data.items.map(item => ({\n        id: item.id.videoId,\n        name: item.snippet.title,\n        artists: [{\n          name: item.snippet.channelTitle\n        }],\n        album: {\n          images: [{\n            url: item.snippet.thumbnails.default.url\n          }]\n        }\n      }));\n      setTracks(youtubeTracks);\n    } catch (error) {\n      console.error(\"Error fetching YouTube videos:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search for Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind today?\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"search-box2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchSongs,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-cards-container\",\n      children: tracks.map(track => {\n        var _track$album$images$, _track$artists$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-card\",\n          onClick: () => navigate(`/player/${track.id}`),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-card-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url) || \"\",\n              alt: track.name,\n              className: \"song-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"song-title\",\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"song-artist\",\n                children: (_track$artists$ = track.artists[0]) === null || _track$artists$ === void 0 ? void 0 : _track$artists$.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"SNIJ6VbgYLxQ75rYbv0FcMdo9YI=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["useState","useNavigate","axios","jsxDEV","_jsxDEV","searchTracks","id","name","artists","album","images","url","YOUTUBE_API_KEY","SearchPage","_s","query","setQuery","tracks","setTracks","navigate","searchSongs","trim","response","get","params","part","maxResults","q","key","type","youtubeTracks","data","items","map","item","videoId","snippet","title","channelTitle","thumbnails","default","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","track","_track$album$images$","_track$artists$","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/bryce/OneDrive/Documents/GitHub/Team-13/my-app/src/pages/SearchPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport '../styles/SearchPage.css';\r\n\r\nconst searchTracks = [\r\n  {\r\n    id: \"song1\",\r\n    name: \"Nokia\",\r\n    artists: [{ name: \"Drake\" }],\r\n    album: { images: [{ url: \"https://i.redd.it/rget84v49jie1.jpeg\" }] }\r\n  },\r\n  {\r\n    id: \"song2\",\r\n    name: \"Stargazing\",\r\n    artists: [{ name: \"Travis Scott\" }],\r\n    album: { images: [{ url: \"https://i.scdn.co/image/ab67616d0000b273072e9faef2ef7b6db63834a3\" }] }\r\n  },\r\n  {\r\n    id: \"song3\",\r\n    name: \"Street Sweeper\",\r\n    artists: [{ name: \"Gunna (Ft. Future)\" }],\r\n    album: { images: [{ url: \"https://i.scdn.co/image/ab67616d0000b273e60ecd82c26836900c35714a\" }] }\r\n  },\r\n  {\r\n    id: \"song4\",\r\n    name: \"Never Gonna Give You Up\",\r\n    artists: [{ name: \"Rick Astley\" }],\r\n    album: { images: [{ url: \"https://makerworld.bblmw.com/makerworld/model/US2ab61bb7d3000c/design/2024-01-30_029b2304056c.png?x-oss-process=image/resize,w_1000/format,webp\" }] }\r\n  },\r\n  {\r\n    id: \"song5\",\r\n    name: \"Not Like Us\",\r\n    artists: [{ name: \"Kendrick Lamar\" }],\r\n    album: { images: [{ url: \"https://i.scdn.co/image/ab67616d0000b2731ea0c62b2339cbf493a999ad\" }] }\r\n  },\r\n  {\r\n    id: \"song6\",\r\n    name: \"Out Of Time\",\r\n    artists: [{ name: \"The Weeknd\" }],\r\n    album: { images: [{ url: \"https://i.scdn.co/image/ab67616d0000b2734ab2520c2c77a1d66b9ee21d\" }] }\r\n  },\r\n  {\r\n    id: \"song7\",\r\n    name: \"Psycho CEO\",\r\n    artists: [{ name: \"Yeat\" }],\r\n    album: { images: [{ url: \"https://upload.wikimedia.org/wikipedia/en/9/97/Yeat_-_2093.png\" }] }\r\n  },\r\n  {\r\n    id: \"song8\",\r\n    name: \"500lbs\",\r\n    artists: [{ name: \"Lil Tecca\" }],\r\n    album: { images: [{ url: \"https://i.scdn.co/image/ab67616d0000b273c4e6adea69105e6b6e214b96\" }] }\r\n  },\r\n  {\r\n    id: \"song9\",\r\n    name: \"EVIL J0RDAN\",\r\n    artists: [{ name: \"Playboi Carti\" }],\r\n    album: { images: [{ url: \"https://images.genius.com/d189226c778fabd425194010d8574361.1000x1000x1.png\" }] }\r\n  },\r\n  {\r\n    id: \"song10\",\r\n    name: \"Can't Leave Without It\",\r\n    artists: [{ name: \"21 Savage\" }],\r\n    album: { images: [{ url: \"https://i1.sndcdn.com/artworks-3BcPD7boRmWW-0-t500x500.jpg\" }] }\r\n  },\r\n];\r\n\r\nconst YOUTUBE_API_KEY = \"AIzaSyAO5UY1Iz3Se1c83YFQZ9u4Plot8Yuur8c\";\r\n\r\nexport default function SearchPage() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [tracks, setTracks] = useState<any[]>(searchTracks);\r\n  const navigate = useNavigate();\r\n\r\n  const searchSongs = async () => {\r\n    if (!query.trim()) return;\r\n\r\n    try {\r\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n        params: {\r\n          part: 'snippet',\r\n          maxResults: 50,\r\n          q: query,\r\n          key: YOUTUBE_API_KEY,\r\n          type: 'video'\r\n        }\r\n      });\r\n\r\n      const youtubeTracks = response.data.items.map((item: any) => ({\r\n        id: item.id.videoId,\r\n        name: item.snippet.title,\r\n        artists: [{ name: item.snippet.channelTitle }],\r\n        album: { images: [{ url: item.snippet.thumbnails.default.url }] }\r\n      }));\r\n\r\n      setTracks(youtubeTracks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching YouTube videos:\", error);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <h2>Search for Songs</h2>\r\n      <div className=\"search-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind today?\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          className=\"search-box2\"\r\n        />\r\n        <button onClick={searchSongs} className=\"search-button\">Search</button>\r\n      </div>\r\n      <div className=\"song-cards-container\">\r\n        {tracks.map((track: any) => (\r\n          <div\r\n            key={track.id}\r\n            className=\"song-card\"\r\n            onClick={() => navigate(`/player/${track.id}`)}\r\n          >\r\n            <div className=\"song-card-left\">\r\n              <img\r\n                src={track.album.images[0]?.url || \"\"}\r\n                alt={track.name}\r\n                className=\"song-image\"\r\n              />\r\n              <div className=\"song-info\">\r\n                <p className=\"song-title\">{track.name}</p>\r\n                <p className=\"song-artist\">{track.artists[0]?.name}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}